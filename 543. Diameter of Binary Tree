/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int maximum = 0;
        height(root, maximum);
        return maximum;   
    }
    
    int height(TreeNode* root, int& maximum) {
        if (root == nullptr) return 0;
        
        int leftht = height(root->left, maximum);
        int rightht = height(root->right, maximum);
        
        maximum = max(leftht + rightht, maximum);
        
        return 1 + max(leftht, rightht);
    }
};
