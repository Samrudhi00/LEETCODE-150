/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == nullptr || head->next == nullptr)return head;
        int cnt = 1;
        ListNode* start = head;
        ListNode* end = head;
        while (end->next != nullptr) {
            end = end->next;
            cnt++;
        }
        //new cnt
         cnt = cnt / 2;

        while(cnt>0){
            end->next = start->next;
            start->next = start->next->next;
            end->next->next = nullptr;
            start = start->next;
            end = end->next;
            cnt--;
        }
        return head;

    }
};
