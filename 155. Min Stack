class MinStack {
    stack<pair<int, int>> st;
public:
    MinStack() {}
    void push(int val) {
        int newMin;
        if (st.empty()) {
            newMin = val;
        } else {
            int currentMin = st.top().second;
            newMin = min(val, currentMin);
        }
        pair<int, int> newPair(val, newMin);
        st.push(newPair);
    }
    void pop() {
        if (!st.empty()) {
            st.pop();
        }
    }
    int top() {
        return st.top().first;
    }
    int getMin() {
        return st.top().second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
